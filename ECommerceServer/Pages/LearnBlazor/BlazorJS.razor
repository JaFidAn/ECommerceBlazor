@page "/learnBlazor/blazorJS"
@inject IJSRuntime _JsRuntime

<h3>Blazor JS</h3>

<div class="row">
    <button class='btn btn-secondary m-2' style="width:200px" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>
<div class="row">
    <button class='btn btn-success m-2' style="width:200px" @onclick="ToastrSuccess">Toastr Success</button>
    <button class='btn btn-danger m-2' style="width:200px" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />
<div class="row">
    <button class='btn btn-success m-2' style="width:200px" @onclick="SweetAlertSuccess">Sweet Alert Success</button>
    <button class='btn btn-danger m-2' style="width:200px" @onclick="SweetAlertFailure">Sweet Alert Failure</button>
</div>
<div>
    @if (ConfirmResult)
    {
        <p>Confirmation has been made</p>
    }
    else
    {
        <p>Consfirmation is pending</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    public bool ConfirmResult { get; set; }
    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Successful");
    }

    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "success", "Task Completed Successfully");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.InvokeVoidAsync("ShowSwal", "error", "Task Failed");
    }
}