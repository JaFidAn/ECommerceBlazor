@page "/learnBlazor/demoProduct"

<h2 class="text-primary">Demo Product</h2>
<p>Favorites Total : @SelectedFavoriteCount</p>
<p>Last Selected Product : @LastSelectedProductName</p>
<div class="row">
    @foreach (var product in Products)
    {
        <_IndividualProduct Product="@product" OnFavoriteUpdated="FavoriteCountUpdate"
        OnLastSelectedProductChange="SelectedProductUpdate">
            <FirstFragment>#1</FirstFragment>
            <SecondFragment>#2</SecondFragment>
        </_IndividualProduct>
    }
</div>

@code {
    List<DemoProduct> Products = new List<DemoProduct>();
    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelectedProductName { get; set; }
    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            Price = 10.99,
            IsActive = true,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new DemoProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blassom Lily",
            Price = 15.05,
            IsActive = false,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new DemoProductProp { Id = 3, Key = "Color", Value = "White" }
            }
        });
    }
    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }

    protected void SelectedProductUpdate(string productName)
    {
        LastSelectedProductName = productName;
    }
}