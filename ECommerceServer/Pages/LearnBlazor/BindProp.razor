@page "/learnBlazor/bindProp"

<h2 class="text-success">Individual Product</h2>

<div class="row">
    <div class="col-6 border p-2">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        <div> Active: <input type="checkbox" @bind-value="product.IsActive"
                checked="@(product.IsActive ? "checked" : null)" /> </div>
        <br />
        <div>Price: <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /></div> <br />
        <div>Product Properties :
            <select @bind="selectedProp">
                @foreach (var prop in product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>

    </div>

    <div class="col-6 border p-2">
        <h3 class="text-primary">Product Summary</h3>
        <hr />

        Id: @product.Id <br />
        Name: @product.Name <br />
        Price: @product.Price <br />
        The Product is : @(product.IsActive ? "Active" : "InActive") <br />
        Property Selected : @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value : @product.ProductProperties.FirstOrDefault(x => x.Key == selectedProp).Value</p>
        }
        <br />
    </div>
</div>

<div class="col-12 pt-4">
    <h2 class="text-success">Product Table</h2>
    <table class="table table-striped">
        <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value="product.Name" @bind-value:event="oninput" />
                    </td>

                    <td>
                        <input type="number" @bind-value="product.Price" @bind-value:event="oninput" />
                    </td>

                    <td>
                        <input type="checkbox" @bind-value="product.IsActive"
                        checked="@(product.IsActive ? "checked" : null)" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br /> <br />
    <h2>Product Summary</h2>
    @foreach (var product in Products)
    {
        <p>@product.Name
            [@product.Price] is @(product.IsActive ? "Active" : "InActive");</p>
    }
</div>



@code {
    private string selectedProp = "";
    DemoProduct product = new DemoProduct
    {
        Id = 1,
        Name = "Rose",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<DemoProductProp>()
{
new DemoProductProp {Id=1, Key="Color", Value="Black"},
new DemoProductProp {Id=2, Key="Flavor", Value="Rose Jasmine"},
new DemoProductProp {Id=3, Key="Size", Value="20oz"}
}
    };
    List<DemoProduct> Products = new List<DemoProduct>();
    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            Price = 10.99,
            IsActive = true,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "20oz" },
                new DemoProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blassom Lily",
            Price = 15.05,
            IsActive = false,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new DemoProductProp { Id = 3, Key = "Color", Value = "White" }
            }
        });
    }

}